version = 0.0.2-SNAPSHOT

# Location of the Aquarium accounting policy config file. If commented
# out, Aquarium will look for the file policy.yaml first at the program
# starting directory and then fall back to the classpath.
aquarium.policy=policy.yaml

# Location of the file that defines the mappings between
# user roles and agreements
aquarium.role-agreement.map=role-agreement.map

### Queue related settings

# Comma separated list of amqp servers to use. The servers must be in an
# active-active mode.
amqp.servers=localhost

# Comma separated list of amqp servers to use. The servers must be in an
# active-active mode.
amqp.port=5672

# User name for connecting with the AMQP server
amqp.username=aquarium

# Passwd for connecting with the AMQP server
amqp.passwd=aquarium

# Virtual host on the AMQP server
amqp.vhost=/

# Queue declarations for receiving resource events.
# Format is "exchange:routing.key:queue". Entries are separated by ;
amqp.resevents.queues=pithos:pithos.resource.#:aquarium-pithos-resevents;cyclades:cyclades.resource.#:aquarium-cyclades-resevents

# Queue declarations for receiving IM events, format is "exchange:routing.key:queue"
amqp.userevents.queues=astakos:astakos.user:aquarium-userevents

# REST service listening port
rest.port=8888

### Message store related settings

# Provider for persistence services.
# Currently one of: mongo
persistence.provider=mongodb

# Hostname for the persistence service
persistence.host=localhost

# Port for connecting to the persistence service
persistence.port=27017

# Username for connecting to the persistence service
persistence.username=aquarium

# Password for connecting to the persistence service
persistence.password=aquarium

### Performance options

# Maximum number of open connections to MongoDB. Has no effect if
# another driver is in use
mongo.connection.pool.size=20

# Relative to AQUARIUM_HOME or an absolute path
events.store.folder=../events-store

#######
# DO NOT TOUCH the following options, unless you know what you are doing
#######

# Actor subsystem
actor.provider.class=gr.grnet.aquarium.service.SimpleLocalRoleableActorProviderService

# Class that initializes the REST service
rest.service.class=gr.grnet.aquarium.service.RESTActorService

# Store subsystem
store.provider.class=gr.grnet.aquarium.store.mongodb.MemStore

# Override the user store (if present, it will not be given by the store provider above)
user.state.store.class=gr.grnet.aquarium.store.memory.MemStore

# Override the event store (if present, it will not be given by the store provider above)
resource.event.store.class=gr.grnet.aquarium.store.memory.MemStore

# Override the WalletEntry store (if present, it will not be given by the store provider above)
wallet.entry.store.class=gr.grnet.aquarium.store.memory.MemStore

# Override the user event store (if present, it will not be given by the store provider above)
user.event.store.class=gr.grnet.aquarium.store.memory.MemStore

# Override the user event store (if present, it will not be given by the store provider above)
policy.store.class=gr.grnet.aquarium.store.memory.MemStore

# The lower mark for the UserActors' LRU.
user.actor.LRU.lower.mark=800

# The upper mark for the UserActors' LRU.
user.actors.LRU.upper.mark=1000

# A time period in milliseconds for which we can tolerate stale data regarding user state.
user.state.timestamp.threshold=10000

# Comma separated list of exchanges known to aquarium
amqp.exchange=aquarium

# The name of the DB schema to use
persistence.db=aquarium

# This is an absolute constant for the lifetime of an Aquarium installation.
# 1 means that every second counts
time.unit.in.seconds = 1

# Save unparsed user events to user event store
ack.unparsed.event.im=false

# Administrative REST API authorization cookie
admin.cookie=1