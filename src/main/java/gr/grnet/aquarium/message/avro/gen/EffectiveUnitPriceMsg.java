/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package gr.grnet.aquarium.message.avro.gen;  
@SuppressWarnings("all")
public class EffectiveUnitPriceMsg extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EffectiveUnitPriceMsg\",\"namespace\":\"gr.grnet.aquarium.message.avro.gen\",\"fields\":[{\"name\":\"unitPrice\",\"type\":\"double\"},{\"name\":\"when\",\"type\":[{\"type\":\"record\",\"name\":\"CronSpecTupleMsg\",\"fields\":[{\"name\":\"a\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"b\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]},\"null\"]}]}");
  @Deprecated public double unitPrice;
  @Deprecated public gr.grnet.aquarium.message.avro.gen.CronSpecTupleMsg when;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return unitPrice;
    case 1: return when;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: unitPrice = (java.lang.Double)value$; break;
    case 1: when = (gr.grnet.aquarium.message.avro.gen.CronSpecTupleMsg)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'unitPrice' field.
   */
  public java.lang.Double getUnitPrice() {
    return unitPrice;
  }

  /**
   * Sets the value of the 'unitPrice' field.
   * @param value the value to set.
   */
  public void setUnitPrice(java.lang.Double value) {
    this.unitPrice = value;
  }

  /**
   * Gets the value of the 'when' field.
   */
  public gr.grnet.aquarium.message.avro.gen.CronSpecTupleMsg getWhen() {
    return when;
  }

  /**
   * Sets the value of the 'when' field.
   * @param value the value to set.
   */
  public void setWhen(gr.grnet.aquarium.message.avro.gen.CronSpecTupleMsg value) {
    this.when = value;
  }

  /** Creates a new EffectiveUnitPriceMsg RecordBuilder */
  public static gr.grnet.aquarium.message.avro.gen.EffectiveUnitPriceMsg.Builder newBuilder() {
    return new gr.grnet.aquarium.message.avro.gen.EffectiveUnitPriceMsg.Builder();
  }
  
  /** Creates a new EffectiveUnitPriceMsg RecordBuilder by copying an existing Builder */
  public static gr.grnet.aquarium.message.avro.gen.EffectiveUnitPriceMsg.Builder newBuilder(gr.grnet.aquarium.message.avro.gen.EffectiveUnitPriceMsg.Builder other) {
    return new gr.grnet.aquarium.message.avro.gen.EffectiveUnitPriceMsg.Builder(other);
  }
  
  /** Creates a new EffectiveUnitPriceMsg RecordBuilder by copying an existing EffectiveUnitPriceMsg instance */
  public static gr.grnet.aquarium.message.avro.gen.EffectiveUnitPriceMsg.Builder newBuilder(gr.grnet.aquarium.message.avro.gen.EffectiveUnitPriceMsg other) {
    return new gr.grnet.aquarium.message.avro.gen.EffectiveUnitPriceMsg.Builder(other);
  }
  
  /**
   * RecordBuilder for EffectiveUnitPriceMsg instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EffectiveUnitPriceMsg>
    implements org.apache.avro.data.RecordBuilder<EffectiveUnitPriceMsg> {

    private double unitPrice;
    private gr.grnet.aquarium.message.avro.gen.CronSpecTupleMsg when;

    /** Creates a new Builder */
    private Builder() {
      super(gr.grnet.aquarium.message.avro.gen.EffectiveUnitPriceMsg.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(gr.grnet.aquarium.message.avro.gen.EffectiveUnitPriceMsg.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing EffectiveUnitPriceMsg instance */
    private Builder(gr.grnet.aquarium.message.avro.gen.EffectiveUnitPriceMsg other) {
            super(gr.grnet.aquarium.message.avro.gen.EffectiveUnitPriceMsg.SCHEMA$);
      if (isValidValue(fields()[0], other.unitPrice)) {
        this.unitPrice = (java.lang.Double) data().deepCopy(fields()[0].schema(), other.unitPrice);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.when)) {
        this.when = (gr.grnet.aquarium.message.avro.gen.CronSpecTupleMsg) data().deepCopy(fields()[1].schema(), other.when);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'unitPrice' field */
    public java.lang.Double getUnitPrice() {
      return unitPrice;
    }
    
    /** Sets the value of the 'unitPrice' field */
    public gr.grnet.aquarium.message.avro.gen.EffectiveUnitPriceMsg.Builder setUnitPrice(double value) {
      validate(fields()[0], value);
      this.unitPrice = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'unitPrice' field has been set */
    public boolean hasUnitPrice() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'unitPrice' field */
    public gr.grnet.aquarium.message.avro.gen.EffectiveUnitPriceMsg.Builder clearUnitPrice() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'when' field */
    public gr.grnet.aquarium.message.avro.gen.CronSpecTupleMsg getWhen() {
      return when;
    }
    
    /** Sets the value of the 'when' field */
    public gr.grnet.aquarium.message.avro.gen.EffectiveUnitPriceMsg.Builder setWhen(gr.grnet.aquarium.message.avro.gen.CronSpecTupleMsg value) {
      validate(fields()[1], value);
      this.when = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'when' field has been set */
    public boolean hasWhen() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'when' field */
    public gr.grnet.aquarium.message.avro.gen.EffectiveUnitPriceMsg.Builder clearWhen() {
      when = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public EffectiveUnitPriceMsg build() {
      try {
        EffectiveUnitPriceMsg record = new EffectiveUnitPriceMsg();
        record.unitPrice = fieldSetFlags()[0] ? this.unitPrice : (java.lang.Double) defaultValue(fields()[0]);
        record.when = fieldSetFlags()[1] ? this.when : (gr.grnet.aquarium.message.avro.gen.CronSpecTupleMsg) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
