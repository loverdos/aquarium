/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package gr.grnet.aquarium.message.avro.gen;  
@SuppressWarnings("all")
public class WorkingResourceInstanceChargingStateMsg extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"WorkingResourceInstanceChargingStateMsg\",\"namespace\":\"gr.grnet.aquarium.message.avro.gen\",\"fields\":[{\"name\":\"details\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"AnyValueMsg\",\"fields\":[{\"name\":\"anyValue\",\"type\":[\"null\",\"int\",\"long\",\"boolean\",\"double\",\"bytes\",\"string\"]}]}}},{\"name\":\"previousEvents\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ResourceEventMsg\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"aliases\":[\"originalID\",\"ID\"]},{\"name\":\"idInStore\",\"type\":\"string\"},{\"name\":\"occurredMillis\",\"type\":\"long\"},{\"name\":\"receivedMillis\",\"type\":\"long\",\"default\":0},{\"name\":\"userID\",\"type\":\"string\"},{\"name\":\"clientID\",\"type\":\"string\"},{\"name\":\"eventVersion\",\"type\":\"string\",\"default\":\"1.0\"},{\"name\":\"resource\",\"type\":\"string\",\"aliases\":[\"resourceType\"]},{\"name\":\"instanceID\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"},{\"name\":\"details\",\"type\":{\"type\":\"map\",\"values\":\"AnyValueMsg\"}}]}}},{\"name\":\"implicitlyIssuedStartEvents\",\"type\":{\"type\":\"array\",\"items\":\"ResourceEventMsg\"}},{\"name\":\"accumulatingAmount\",\"type\":\"double\"},{\"name\":\"oldAccumulatingAmount\",\"type\":\"double\"},{\"name\":\"previousValue\",\"type\":\"double\"},{\"name\":\"currentValue\",\"type\":\"double\"}]}");
  @Deprecated public java.util.Map<java.lang.CharSequence,gr.grnet.aquarium.message.avro.gen.AnyValueMsg> details;
  @Deprecated public java.util.List<gr.grnet.aquarium.message.avro.gen.ResourceEventMsg> previousEvents;
  @Deprecated public java.util.List<gr.grnet.aquarium.message.avro.gen.ResourceEventMsg> implicitlyIssuedStartEvents;
  @Deprecated public double accumulatingAmount;
  @Deprecated public double oldAccumulatingAmount;
  @Deprecated public double previousValue;
  @Deprecated public double currentValue;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return details;
    case 1: return previousEvents;
    case 2: return implicitlyIssuedStartEvents;
    case 3: return accumulatingAmount;
    case 4: return oldAccumulatingAmount;
    case 5: return previousValue;
    case 6: return currentValue;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: details = (java.util.Map<java.lang.CharSequence,gr.grnet.aquarium.message.avro.gen.AnyValueMsg>)value$; break;
    case 1: previousEvents = (java.util.List<gr.grnet.aquarium.message.avro.gen.ResourceEventMsg>)value$; break;
    case 2: implicitlyIssuedStartEvents = (java.util.List<gr.grnet.aquarium.message.avro.gen.ResourceEventMsg>)value$; break;
    case 3: accumulatingAmount = (java.lang.Double)value$; break;
    case 4: oldAccumulatingAmount = (java.lang.Double)value$; break;
    case 5: previousValue = (java.lang.Double)value$; break;
    case 6: currentValue = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'details' field.
   */
  public java.util.Map<java.lang.CharSequence,gr.grnet.aquarium.message.avro.gen.AnyValueMsg> getDetails() {
    return details;
  }

  /**
   * Sets the value of the 'details' field.
   * @param value the value to set.
   */
  public void setDetails(java.util.Map<java.lang.CharSequence,gr.grnet.aquarium.message.avro.gen.AnyValueMsg> value) {
    this.details = value;
  }

  /**
   * Gets the value of the 'previousEvents' field.
   */
  public java.util.List<gr.grnet.aquarium.message.avro.gen.ResourceEventMsg> getPreviousEvents() {
    return previousEvents;
  }

  /**
   * Sets the value of the 'previousEvents' field.
   * @param value the value to set.
   */
  public void setPreviousEvents(java.util.List<gr.grnet.aquarium.message.avro.gen.ResourceEventMsg> value) {
    this.previousEvents = value;
  }

  /**
   * Gets the value of the 'implicitlyIssuedStartEvents' field.
   */
  public java.util.List<gr.grnet.aquarium.message.avro.gen.ResourceEventMsg> getImplicitlyIssuedStartEvents() {
    return implicitlyIssuedStartEvents;
  }

  /**
   * Sets the value of the 'implicitlyIssuedStartEvents' field.
   * @param value the value to set.
   */
  public void setImplicitlyIssuedStartEvents(java.util.List<gr.grnet.aquarium.message.avro.gen.ResourceEventMsg> value) {
    this.implicitlyIssuedStartEvents = value;
  }

  /**
   * Gets the value of the 'accumulatingAmount' field.
   */
  public java.lang.Double getAccumulatingAmount() {
    return accumulatingAmount;
  }

  /**
   * Sets the value of the 'accumulatingAmount' field.
   * @param value the value to set.
   */
  public void setAccumulatingAmount(java.lang.Double value) {
    this.accumulatingAmount = value;
  }

  /**
   * Gets the value of the 'oldAccumulatingAmount' field.
   */
  public java.lang.Double getOldAccumulatingAmount() {
    return oldAccumulatingAmount;
  }

  /**
   * Sets the value of the 'oldAccumulatingAmount' field.
   * @param value the value to set.
   */
  public void setOldAccumulatingAmount(java.lang.Double value) {
    this.oldAccumulatingAmount = value;
  }

  /**
   * Gets the value of the 'previousValue' field.
   */
  public java.lang.Double getPreviousValue() {
    return previousValue;
  }

  /**
   * Sets the value of the 'previousValue' field.
   * @param value the value to set.
   */
  public void setPreviousValue(java.lang.Double value) {
    this.previousValue = value;
  }

  /**
   * Gets the value of the 'currentValue' field.
   */
  public java.lang.Double getCurrentValue() {
    return currentValue;
  }

  /**
   * Sets the value of the 'currentValue' field.
   * @param value the value to set.
   */
  public void setCurrentValue(java.lang.Double value) {
    this.currentValue = value;
  }

  /** Creates a new WorkingResourceInstanceChargingStateMsg RecordBuilder */
  public static gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder newBuilder() {
    return new gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder();
  }
  
  /** Creates a new WorkingResourceInstanceChargingStateMsg RecordBuilder by copying an existing Builder */
  public static gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder newBuilder(gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder other) {
    return new gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder(other);
  }
  
  /** Creates a new WorkingResourceInstanceChargingStateMsg RecordBuilder by copying an existing WorkingResourceInstanceChargingStateMsg instance */
  public static gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder newBuilder(gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg other) {
    return new gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder(other);
  }
  
  /**
   * RecordBuilder for WorkingResourceInstanceChargingStateMsg instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<WorkingResourceInstanceChargingStateMsg>
    implements org.apache.avro.data.RecordBuilder<WorkingResourceInstanceChargingStateMsg> {

    private java.util.Map<java.lang.CharSequence,gr.grnet.aquarium.message.avro.gen.AnyValueMsg> details;
    private java.util.List<gr.grnet.aquarium.message.avro.gen.ResourceEventMsg> previousEvents;
    private java.util.List<gr.grnet.aquarium.message.avro.gen.ResourceEventMsg> implicitlyIssuedStartEvents;
    private double accumulatingAmount;
    private double oldAccumulatingAmount;
    private double previousValue;
    private double currentValue;

    /** Creates a new Builder */
    private Builder() {
      super(gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing WorkingResourceInstanceChargingStateMsg instance */
    private Builder(gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg other) {
            super(gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.SCHEMA$);
      if (isValidValue(fields()[0], other.details)) {
        this.details = (java.util.Map<java.lang.CharSequence,gr.grnet.aquarium.message.avro.gen.AnyValueMsg>) data().deepCopy(fields()[0].schema(), other.details);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.previousEvents)) {
        this.previousEvents = (java.util.List<gr.grnet.aquarium.message.avro.gen.ResourceEventMsg>) data().deepCopy(fields()[1].schema(), other.previousEvents);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.implicitlyIssuedStartEvents)) {
        this.implicitlyIssuedStartEvents = (java.util.List<gr.grnet.aquarium.message.avro.gen.ResourceEventMsg>) data().deepCopy(fields()[2].schema(), other.implicitlyIssuedStartEvents);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.accumulatingAmount)) {
        this.accumulatingAmount = (java.lang.Double) data().deepCopy(fields()[3].schema(), other.accumulatingAmount);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.oldAccumulatingAmount)) {
        this.oldAccumulatingAmount = (java.lang.Double) data().deepCopy(fields()[4].schema(), other.oldAccumulatingAmount);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.previousValue)) {
        this.previousValue = (java.lang.Double) data().deepCopy(fields()[5].schema(), other.previousValue);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.currentValue)) {
        this.currentValue = (java.lang.Double) data().deepCopy(fields()[6].schema(), other.currentValue);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'details' field */
    public java.util.Map<java.lang.CharSequence,gr.grnet.aquarium.message.avro.gen.AnyValueMsg> getDetails() {
      return details;
    }
    
    /** Sets the value of the 'details' field */
    public gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder setDetails(java.util.Map<java.lang.CharSequence,gr.grnet.aquarium.message.avro.gen.AnyValueMsg> value) {
      validate(fields()[0], value);
      this.details = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'details' field has been set */
    public boolean hasDetails() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'details' field */
    public gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder clearDetails() {
      details = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'previousEvents' field */
    public java.util.List<gr.grnet.aquarium.message.avro.gen.ResourceEventMsg> getPreviousEvents() {
      return previousEvents;
    }
    
    /** Sets the value of the 'previousEvents' field */
    public gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder setPreviousEvents(java.util.List<gr.grnet.aquarium.message.avro.gen.ResourceEventMsg> value) {
      validate(fields()[1], value);
      this.previousEvents = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'previousEvents' field has been set */
    public boolean hasPreviousEvents() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'previousEvents' field */
    public gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder clearPreviousEvents() {
      previousEvents = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'implicitlyIssuedStartEvents' field */
    public java.util.List<gr.grnet.aquarium.message.avro.gen.ResourceEventMsg> getImplicitlyIssuedStartEvents() {
      return implicitlyIssuedStartEvents;
    }
    
    /** Sets the value of the 'implicitlyIssuedStartEvents' field */
    public gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder setImplicitlyIssuedStartEvents(java.util.List<gr.grnet.aquarium.message.avro.gen.ResourceEventMsg> value) {
      validate(fields()[2], value);
      this.implicitlyIssuedStartEvents = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'implicitlyIssuedStartEvents' field has been set */
    public boolean hasImplicitlyIssuedStartEvents() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'implicitlyIssuedStartEvents' field */
    public gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder clearImplicitlyIssuedStartEvents() {
      implicitlyIssuedStartEvents = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'accumulatingAmount' field */
    public java.lang.Double getAccumulatingAmount() {
      return accumulatingAmount;
    }
    
    /** Sets the value of the 'accumulatingAmount' field */
    public gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder setAccumulatingAmount(double value) {
      validate(fields()[3], value);
      this.accumulatingAmount = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'accumulatingAmount' field has been set */
    public boolean hasAccumulatingAmount() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'accumulatingAmount' field */
    public gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder clearAccumulatingAmount() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'oldAccumulatingAmount' field */
    public java.lang.Double getOldAccumulatingAmount() {
      return oldAccumulatingAmount;
    }
    
    /** Sets the value of the 'oldAccumulatingAmount' field */
    public gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder setOldAccumulatingAmount(double value) {
      validate(fields()[4], value);
      this.oldAccumulatingAmount = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'oldAccumulatingAmount' field has been set */
    public boolean hasOldAccumulatingAmount() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'oldAccumulatingAmount' field */
    public gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder clearOldAccumulatingAmount() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'previousValue' field */
    public java.lang.Double getPreviousValue() {
      return previousValue;
    }
    
    /** Sets the value of the 'previousValue' field */
    public gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder setPreviousValue(double value) {
      validate(fields()[5], value);
      this.previousValue = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'previousValue' field has been set */
    public boolean hasPreviousValue() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'previousValue' field */
    public gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder clearPreviousValue() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'currentValue' field */
    public java.lang.Double getCurrentValue() {
      return currentValue;
    }
    
    /** Sets the value of the 'currentValue' field */
    public gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder setCurrentValue(double value) {
      validate(fields()[6], value);
      this.currentValue = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'currentValue' field has been set */
    public boolean hasCurrentValue() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'currentValue' field */
    public gr.grnet.aquarium.message.avro.gen.WorkingResourceInstanceChargingStateMsg.Builder clearCurrentValue() {
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public WorkingResourceInstanceChargingStateMsg build() {
      try {
        WorkingResourceInstanceChargingStateMsg record = new WorkingResourceInstanceChargingStateMsg();
        record.details = fieldSetFlags()[0] ? this.details : (java.util.Map<java.lang.CharSequence,gr.grnet.aquarium.message.avro.gen.AnyValueMsg>) defaultValue(fields()[0]);
        record.previousEvents = fieldSetFlags()[1] ? this.previousEvents : (java.util.List<gr.grnet.aquarium.message.avro.gen.ResourceEventMsg>) defaultValue(fields()[1]);
        record.implicitlyIssuedStartEvents = fieldSetFlags()[2] ? this.implicitlyIssuedStartEvents : (java.util.List<gr.grnet.aquarium.message.avro.gen.ResourceEventMsg>) defaultValue(fields()[2]);
        record.accumulatingAmount = fieldSetFlags()[3] ? this.accumulatingAmount : (java.lang.Double) defaultValue(fields()[3]);
        record.oldAccumulatingAmount = fieldSetFlags()[4] ? this.oldAccumulatingAmount : (java.lang.Double) defaultValue(fields()[4]);
        record.previousValue = fieldSetFlags()[5] ? this.previousValue : (java.lang.Double) defaultValue(fields()[5]);
        record.currentValue = fieldSetFlags()[6] ? this.currentValue : (java.lang.Double) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
