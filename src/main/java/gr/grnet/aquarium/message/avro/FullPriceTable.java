/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package gr.grnet.aquarium.message.avro;  
@SuppressWarnings("all")
public class FullPriceTable extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FullPriceTable\",\"namespace\":\"gr.grnet.aquarium.message.avro\",\"fields\":[{\"name\":\"perResource\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"SelectorValue\",\"fields\":[{\"name\":\"selectorValue\",\"type\":[{\"type\":\"record\",\"name\":\"EffectivePriceTable\",\"fields\":[]},{\"type\":\"map\",\"values\":\"SelectorValue\"}]}]}}}}]}");
  @Deprecated public java.util.Map<java.lang.CharSequence,java.util.Map<java.lang.CharSequence,gr.grnet.aquarium.message.avro.SelectorValue>> perResource;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return perResource;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: perResource = (java.util.Map<java.lang.CharSequence,java.util.Map<java.lang.CharSequence,gr.grnet.aquarium.message.avro.SelectorValue>>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'perResource' field.
   */
  public java.util.Map<java.lang.CharSequence,java.util.Map<java.lang.CharSequence,gr.grnet.aquarium.message.avro.SelectorValue>> getPerResource() {
    return perResource;
  }

  /**
   * Sets the value of the 'perResource' field.
   * @param value the value to set.
   */
  public void setPerResource(java.util.Map<java.lang.CharSequence,java.util.Map<java.lang.CharSequence,gr.grnet.aquarium.message.avro.SelectorValue>> value) {
    this.perResource = value;
  }

  /** Creates a new FullPriceTable RecordBuilder */
  public static gr.grnet.aquarium.message.avro.FullPriceTable.Builder newBuilder() {
    return new gr.grnet.aquarium.message.avro.FullPriceTable.Builder();
  }
  
  /** Creates a new FullPriceTable RecordBuilder by copying an existing Builder */
  public static gr.grnet.aquarium.message.avro.FullPriceTable.Builder newBuilder(gr.grnet.aquarium.message.avro.FullPriceTable.Builder other) {
    return new gr.grnet.aquarium.message.avro.FullPriceTable.Builder(other);
  }
  
  /** Creates a new FullPriceTable RecordBuilder by copying an existing FullPriceTable instance */
  public static gr.grnet.aquarium.message.avro.FullPriceTable.Builder newBuilder(gr.grnet.aquarium.message.avro.FullPriceTable other) {
    return new gr.grnet.aquarium.message.avro.FullPriceTable.Builder(other);
  }
  
  /**
   * RecordBuilder for FullPriceTable instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FullPriceTable>
    implements org.apache.avro.data.RecordBuilder<FullPriceTable> {

    private java.util.Map<java.lang.CharSequence,java.util.Map<java.lang.CharSequence,gr.grnet.aquarium.message.avro.SelectorValue>> perResource;

    /** Creates a new Builder */
    private Builder() {
      super(gr.grnet.aquarium.message.avro.FullPriceTable.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(gr.grnet.aquarium.message.avro.FullPriceTable.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing FullPriceTable instance */
    private Builder(gr.grnet.aquarium.message.avro.FullPriceTable other) {
            super(gr.grnet.aquarium.message.avro.FullPriceTable.SCHEMA$);
      if (isValidValue(fields()[0], other.perResource)) {
        this.perResource = (java.util.Map<java.lang.CharSequence,java.util.Map<java.lang.CharSequence,gr.grnet.aquarium.message.avro.SelectorValue>>) data().deepCopy(fields()[0].schema(), other.perResource);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'perResource' field */
    public java.util.Map<java.lang.CharSequence,java.util.Map<java.lang.CharSequence,gr.grnet.aquarium.message.avro.SelectorValue>> getPerResource() {
      return perResource;
    }
    
    /** Sets the value of the 'perResource' field */
    public gr.grnet.aquarium.message.avro.FullPriceTable.Builder setPerResource(java.util.Map<java.lang.CharSequence,java.util.Map<java.lang.CharSequence,gr.grnet.aquarium.message.avro.SelectorValue>> value) {
      validate(fields()[0], value);
      this.perResource = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'perResource' field has been set */
    public boolean hasPerResource() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'perResource' field */
    public gr.grnet.aquarium.message.avro.FullPriceTable.Builder clearPerResource() {
      perResource = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public FullPriceTable build() {
      try {
        FullPriceTable record = new FullPriceTable();
        record.perResource = fieldSetFlags()[0] ? this.perResource : (java.util.Map<java.lang.CharSequence,java.util.Map<java.lang.CharSequence,gr.grnet.aquarium.message.avro.SelectorValue>>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
